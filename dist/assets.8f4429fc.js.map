{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","config","media","el","plugins","_initPlugins","prototype","player","play","pause","muted","value","forEach","plugin","run","mute","unmute","AutoPlay","AutoPause","constructor","threshold","handleIntersection","bind","handleVisibilityChange","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","intersectionRatio","isVisible","visibilityState","video","querySelector","buttonPlay","getElementById","buttonMute","onclick","paused","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":";;AGAA;;AACA;;AACA;AHFA,AEAA,ADAA,MCAMkB,GFAGlB,ACAAiB,MCAT,CAAgB,CDAhB,GDAA,ACAmB,CDAEhB,ACAA,MDArB,EAA6B;AACzB,AEAAkB,EAAAA,KFAKjB,KAAL,CEAW,EFAED,CEAA,KFAM,CAACE,EAApB;AACA,AEAI,ADARc,ODASb,CCAD,CCAKgB,ADAJd,KDAL,GAAeL,CEAX,ADAR,CAAmBa,ECAM,CDAzB,CDAyB,CAACV,CEAlB,ADAiB,MDAN,IAAkB,ACAFG,EDA/B,ICAqB,EAAiB;AEE1C,ADDQ,ADAJ,MECE2B,AFDC,CAAC3B,ECAKc,ECCF,EFDG,CECAM,AFDCjB,KAAX,EAAiB,CECC,CAACyB,IDDf,GAA0B,KAAKd,CCCzB,CAAuB,OAAvB,CAAd,QDDkC,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AFCJ,AGCJ,ADDQ,ADAAf,IAAAA,EECF6B,CHDG/B,EEAIkB,CDAC,CAACb,KECC,AFDR,GDAJ,AGCeiB,AFDI,IAAf,IECmB,CAACU,GDDpB,GAA8B,KAAKd,GCCxB,CAAwB,MAAxB,CAAnB,WDDsC,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AFCP,AGCD,ADDK,ADAA,MECCgB,UAAU,GAAGX,QAAQ,CAACU,cAAT,CAAwB,MAAxB,CAAnB;AAEA,MAAM9B,MAAM,GAAG,IAAIP,oBAAJ,CAAgB;AHD/BA,AGEIG,ADFAW,ADDAP,EEGAJ,ADFAW,ADDAP,EEGE,CDFC,CCEC2B,ADFA3B,EDDE,CAACC,EDCA,AGCoB,CHDnBF,AEAL,CDDH,CCCW,OFAf,CAAsBD,YAAtB,GAAqC,YAAY;AAC7C,AGEAD,ADFI,ADDP,CALD,CEQIA,MHFMG,CGEC,ADFEA,ECEA,CAAC,EHFE,CEAR,CCEUU,CHFC,CEAGV,MAAd,SCEM,EAAD,EAAiB,IAAIW,kBAAJ,EAAjB;AHDLV,AGDuB,ADEvB,CCFO,CAAf,EHCQA,IAAI,EAAE,AECAgB,MFDM,EECE,GFDGhB,AECA,IFDL,AECSiB,EFFV,kBEEM,CAAyB,KAAKJ,kBAA9B,EAAkD;AFAnEZ,AECIW,IFDJX,EECIW,GFDC,EAAE,IECM,ADFNH,EDCM,AECE,KFDGR,AECEW,KFDP,EAFF,EEEwD,CACrC;AFA9BlB,AGCRkC,IHDQlC,KAAK,CGCH,CHDK,AGCJqC,KHDSrC,EGCpB,GHJmB,AGIE,MAAMgC,KAAK,CAACM,MAAN,GAAejC,MAAM,CAACC,IAAP,EAAf,GAA+BD,MAAM,CAACE,KAAP,EAA1D;ADF2E,KAAlD,CAAjB;AFEA,AGCR6B,ADCQd,IAAAA,IFFId,EGCF,CAAC6B,CDCK,CFFR,AEESb,GFFE,EGCnB,EDCQ,CCDa,ADCI,KAAKnB,CCDH2B,KAAK,ADCP,CCDQxB,ADCIR,KCDV,ADCnB,GCDiCK,MAAM,CAACS,MAAP,EAAd,GAAgCT,MAAM,CAACQ,IAAP,EAA3D;AHAY,AEGJY,IAAAA,QAAQ,CFHG,AEGFC,KFHO1B,KAAL,CAAWQ,KAAlB,AEGJ,CAA0B,kBAA1B,EAA8C,KAAKa,sBAAnD;AFFC,AGCT,ADEK,ICFF,CHPgB,kBGOGkB,SAAtB,EAAgC;AAC5BA,EAAAA,SAAS,CAACC,aAAV,CAAwBC,QAAxB,CAAiC,sCAAjC,EAA2CC,KAA3C,CAAiDC,KAAK,IAAI;AHDtD,AGEAC,ADEJzB,EAAAA,ECFIyB,IHFIpC,GGEG,CAACqC,CHFR,CAAUpC,CGEV,CAAYkC,GHFZ,CEIc,CFJE,AGEC,ADEFhB,CCFGmB,MDEJ,CCFd,CDEuB;AFHnB,AGEP,ADEG,GCJJ,ODIUlB,CFJG5B,IEIE,CFJP,CAAWQ,CEIDmB,IFJV,GAAmBlB,AEIF,CAAC,CAAD,CAArB,CADuB,CFHnB,AEIsB;AFHzB,AGER;ADGO,QAAGmB,KAAK,CAACC,iBAAN,GAA0B,KAAKX,SAAlC,EAA4C;AFdjC,AEeP,GFfR,QEeab,MAAL,CAAYE,KAAZ;AFHR,AEIK,KAFD,EFFCL,IEII,GFJT,CAAaQ,OAAb,CAAqBC,MAAM,IAAI;AAC3BA,AEII,IFJJA,MAAM,CAACC,AEIEP,GFJT,CAAWA,EEIP,CAAYC,GFJhB,CEII;AFHP,AEII,GFNL;AAGH,AEII,CFpBL;;AAkBAR,AEIIuB,EAAAA,SFJO,CAACjB,SAAZ,CAAsBE,EEII,EFJ1B,CEI6B,EFJA,YAAW;AACpC,AEII,OFJCN,GEIK8B,EFJV,CAAWxB,IAAX,EEImB,GAAGmB,QAAQ,CAACM,eAAT,KAA6B,SAA/C;AFHP,CAFD;AEOQ,QAAGD,SAAH,EAAa;AFHrBhC,AEIY,WFJD,AEIMO,CFJLD,KEIA,CAAYE,GFJxB,CAAsBC,AEIV,KFJZ,GAA8B,YAAU;AACpC,AEIK,KAFD,EFFCP,IEII,CFJT,CAAWO,KAAX;AACH,AEIW,CFNZ,UEMiBF,MAAL,CAAYE,KAAZ;AACH;AFHTT,AEIK,WFJM,CAACM,SAAZ,CAAsBS,IAAtB,GAA6B,YAAU;AACnC,OAAKb,KAAL,CAAWQ,KAAX,GAAmB,IAAnB;AACH,AEnCe,CFiChB;;AAIAV,WAAW,CAACM,GEGGY,MFHf,CAAsBF,MAAtB,GAA+B,YAAU;AACrC,OAAKd,KAAL,CAAWQ,KAAX,GAAmB,KAAnB;AACH,CAFD;;eAIeV","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["function MediaPlayer(config) {\r\n    this.media = config.el;\r\n    this.plugins = config.plugins || [];\r\n\r\n    this._initPlugins();\r\n}\r\n\r\nMediaPlayer.prototype._initPlugins = function () {\r\n    const player = {\r\n        play: () => this.play(),\r\n        pause: () => this.pause(),\r\n        media: this.media,\r\n        get muted(){\r\n            return this.media.muted;\r\n        },\r\n        set muted(value){\r\n            this.media.muted = value;\r\n        }\r\n    }\r\n\r\n    this.plugins.forEach(plugin => {\r\n        plugin.run(player);\r\n    })\r\n}\r\n\r\nMediaPlayer.prototype.play = function() {\r\n    this.media.play();\r\n};\r\n\r\nMediaPlayer.prototype.pause = function(){\r\n    this.media.pause();\r\n}\r\n\r\nMediaPlayer.prototype.mute = function(){\r\n    this.media.muted = true;\r\n}\r\n\r\nMediaPlayer.prototype.unmute = function(){\r\n    this.media.muted = false;\r\n}\r\n\r\nexport default MediaPlayer","function AutoPlay(){}\r\n\r\nAutoPlay.prototype.run = function (player){\r\n    if(!player.muted){\r\n        player.muted = true;\r\n    }\r\n    player.play();\r\n};\r\n\r\nexport default AutoPlay;","class AutoPause {\r\n    constructor(){\r\n        this.threshold = 0.25\r\n        this.handleIntersection = this.handleIntersection.bind(this);\r\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\r\n    }\r\n\r\n    run(player){\r\n        this.player = player;\r\n\r\n        const observer = new IntersectionObserver(this.handleIntersection, {\r\n            threshold: this.threshold //umbral\r\n        })\r\n\r\n        observer.observe(this.player.media)\r\n\r\n        document.addEventListener(\"visibilitychange\", this.handleVisibilityChange)\r\n    }\r\n\r\n    handleIntersection(entries){\r\n        const entry = entries[0]; //Elementos del contenedor\r\n        \r\n        if(entry.intersectionRatio < this.threshold){\r\n            this.player.pause();\r\n        }else{\r\n            this.player.play();\r\n        }\r\n    }\r\n\r\n    handleVisibilityChange() {\r\n        const isVisible = document.visibilityState === \"visible\"\r\n\r\n        if(isVisible){\r\n            this.player.play()\r\n        }else{\r\n            this.player.pause();\r\n        }\r\n    }\r\n}\r\n\r\nexport default AutoPause;","import MediaPlayer from './MediaPlayer.js'\r\nimport AutoPlay from './plugins/AutoPlay.js'\r\nimport AutoPause from './plugins/AutoPause.js'\r\n\r\nconst video = document.querySelector(\"video\");\r\nconst buttonPlay = document.getElementById(\"play\");\r\nconst buttonMute = document.getElementById(\"mute\");\r\n\r\nconst player = new MediaPlayer({ \r\n    el: video,\r\n    plugins: [new AutoPlay(), new AutoPause()] \r\n});\r\nbuttonPlay.onclick = () => video.paused ? player.play() : player.pause();\r\nbuttonMute.onclick = () => video.muted ? player.unmute() : player.mute();\r\n\r\nif('serviceWorker' in navigator){\r\n    navigator.serviceWorker.register('/sw.js').catch(error => {\r\n        console.log(error.message);\r\n    })\r\n}"]}